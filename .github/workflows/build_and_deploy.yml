name: Build and Deploy

on:
  workflow_call:
    inputs:
      is_snapshot:
        required: true
        type: boolean
      version_regex:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        java-version: [ '8', '11', '17', '21' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }} on ${{ matrix.os }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'corretto'
          cache: maven

      - name: Grant execute permission for mvn-exec.sh
        run: chmod +x ./mvnw

      - name: Get Project Version
        id: get_version
        run: |
          VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Validate Version with Regex
        run: |
          if [[ "${{ env.VERSION }}" =~ ${{ inputs.version_regex }} ]]; then
            echo "Version ${{ env.VERSION }} matches the regex ${{ inputs.version_regex }}. Proceeding..."
          else
            echo "Version ${{ env.VERSION }} does not match the regex ${{ inputs.version_regex }}. Failing..."
            exit 1
          fi

      - name: Build with Maven Wrapper
        run: ./mvnw clean verify

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results - JDK ${{ matrix.java-version }} on ${{ matrix.os }}
          path: target/surefire-reports/*.xml

  deploy:
    needs: build
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'corretto'
          cache: maven

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Bump Version and Release (Maven Release Plugin)
        if: inputs.is_snapshot == 'false' && endsWith(env.VERSION, '-SNAPSHOT')
        run: |
          echo "Releasing and bumping version..."
          ./mvnw release:prepare release:perform -B

      - name: Deploy SNAPSHOT
        if: inputs.is_snapshot == 'true'
        run: ./mvnw --batch-mode -DskipTests deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
